name: Dev All-in-One

on:
  # Allow manual runs.
  workflow_dispatch:
  # Also run on updates to this workflow.
  push:
    paths-ignore:
      - '**/*.md'
  # Run on PRs except for documentation
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  PLATFORMS: linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64
  IMAGE_NAME: funkwhale-aio

jobs:
  build-only:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Get current commit on funkwhale submodule
        run: |
          echo FUNKWHALE_REV=$(git rev-parse --short @:./funkwhale) >> $GITHUB_ENV

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1

      - name: Prepare all-in-one build space
        run: |
          cd docker-funkwhale
          ./scripts/download-artifact.sh src/ ${{env.FUNKWHALE_REV}} build_front
          ./scripts/download-artifact.sh src/ ${{env.FUNKWHALE_REV}} build_api
          ./scripts/download-nginx-template.sh src/ ${{env.FUNKWHALE_REV}}

      - name: Build ${env.IMAGE_NAME} Docker image
        uses: docker/build-push-action@v2
        with:
          context: docker-funkwhale/
          file: docker-funkwhale/Dockerfile
          platforms: ${ env.PLATFORMS }
          push: false

  build-and-push:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Get current commit on funkwhale submodule
        run: |
          echo FUNKWHALE_REV=$(git rev-parse --short @:./funkwhale) >> $GITHUB_ENV

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Prepare all-in-one build space
        run: |
          cd docker-funkwhale
          ./scripts/download-artifact.sh src/ ${{env.FUNKWHALE_REV}} build_front
          ./scripts/download-artifact.sh src/ ${{env.FUNKWHALE_REV}} build_api
          ./scripts/download-nginx-template.sh src/ ${{env.FUNKWHALE_REV}}

      - name: Build and push ${env.IMAGE_NAME} Docker image
        uses: docker/build-push-action@v2
        with:
          context: docker-funkwhale/
          file: docker-funkwhale/Dockerfile
          tags: |
            florianpiesche/${env.IMAGE_NAME}:latest
            florianpiesche/${env.IMAGE_NAME}:${{env.FUNKWHALE_REV}}
            ghcr.io/fpiesche/${env.IMAGE_NAME}:latest
            ghcr.io/fpiesche/${env.IMAGE_NAME}:${{env.FUNKWHALE_REV}}
          platforms: ${ env.PLATFORMS }
          push: true
